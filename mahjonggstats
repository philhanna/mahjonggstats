#! /usr/bin/python3

import os.path
from datetime import *

class HistoryList:
    """ History records for this user
    """
    DEFAULT_FILENAME = os.path.expanduser('~/.local/share/gnome-mahjongg/history')

    def __init__(self):
        self.filename = HistoryList.DEFAULT_FILENAME
        self.levels = {}
        with open(self.filename, "rt") as f:
            for line in f:
                history = History(line)
                level = history.level
                recordList = self.getRecordList(level)
                recordList.add(history)

        for level in self.levels:
            self.getRecordList(level).sort()

    def getRecordList(self, level):
        if level not in self.levels:
            self.levels[level] = RecordList()
        return self.levels[level]

class RecordList:
    """ A list of records at a particular level
    """
    def __init__(self):
        self.records = []

    def add(self, history):
        self.records.append(history)

    def sort(self):
        self.records.sort(key=lambda history: history.seconds)

class History:
    """ A single record in mahjongg history

        The file is located at ~/.local/share/gnome-mahjongg/history
    """
    def __init__(self, line):
        tokens = line.split()
        self.date = datetime.strptime(tokens[0], '%Y-%m-%dT%H:%M:%S%z')
        self.level = tokens[1]
        self.seconds = tokens[2]

    def __str__(self):
        return ("{date}: {time}".format(
            date=self.date.strftime("%Y-%m-%d"),
            time=self.secondsAsMMSS()
        ))

    def secondsAsMMSS(self):
        seconds = int(self.seconds)
        mm = seconds // 60
        ss = seconds % 60
        return "{0:02d}:{1:02d}".format(mm, ss)

if __name__ == '__main__':
    
    historyList = HistoryList()
    for level in historyList.levels:
        print("Records in level '{}'".format(level))
        recordList = historyList.getRecordList(level)
        for history in recordList.records[:5]:
            print("\t{}".format(history))
